image: python:latest

stages:
  - prepare
  - install
  - lint
  - test
  - imagebuild

check:
  stage: prepare
  script:
    - python -v
    - apt update -y
    - apt upgrade -y

linting:
  image: python:latest
  stage: lint
  artifacts:
    untracked: true
    expire_in: 30 days
  script:
    - pip install pylint
    - ls -all
    - pylint webserver.py > lint.log

testfile:
  stage: test
  script:
    - ls -all | egrep "**.py"
    - ls -all | egrep "**.log"

awscliinstall:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: install
  script:
    - aws s3 ls
    - apt update -y && apt upgrade -y
    - apt install curl gnupg software-properties-common -y
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    - apt update -y && apt install terraform -y
    - terraform init
    - terraform apply -auto-approve

buildimage:
  stage: imagebuild
  image: docker:19.03.13
  script:
    - docker -v
    - docker image build . -t ubersholder/cidocker:1
    - docker image ls
    - echo "$DOCKER_REGISTRY_PASS" | docker login $DOCKER_REGISTRY --username $DOCKER_REGISTRY_USER --password-stdin
    - docker push ubersholder/cidocker:1
